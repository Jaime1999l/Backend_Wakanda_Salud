services:
  mysql:
    image: mysql:8.0
    hostname: mysql-wakanda
    container_name: mysql-wakanda
    environment:
      - MYSQL_DATABASE=Backend_Wakanda_Salud
      - MYSQL_ROOT_PASSWORD=P@ssw0rd
    ports:
      - "3308:3306"  # HOST:3308 -> CONTENEDOR:3306
    networks:
      - backend-network
    healthcheck:   # Comprueba si MySQL está listo antes de aceptar conexiones
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-P", "3306", "-u", "root", "-pP@ssw0rd"]
      interval: 10s
      retries: 5
      timeout: 5s

  backend-wakanda-salud:
    build:
      context: ./  # Directorio del Dockerfile del microservicio
    container_name: backend-wakanda-salud
    ports:
      - "8080:8090"  # Mapea el puerto del microservicio
    networks:
      - backend-network
    environment:
      - EUREKA_SERVER_URL=http://eureka-server:8761/eureka/
      - SPRING_PROFILES_ACTIVE=default
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-wakanda:3306/Backend_Wakanda_Salud?serverTimezone=UTC
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=P@ssw0rd
    depends_on:
      mysql:
        condition: service_healthy  # Espera a que MySQL esté "healthy"
    entrypoint: [
      "./wait-for-it.sh", "eureka-server:8761", "-t", "60", "--",
      "./wait-for-it.sh", "mysql-wakanda:3306", "-t", "60", "--",
      "java", "-jar", "/app/backend_wakanda_salud.jar"
    ]

volumes:
  mysql-data:

networks:
  backend-network:
    external: true
